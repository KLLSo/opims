package me.opims.dao;

import me.opims.model.Comment;
import org.apache.ibatis.annotations.*;

import java.util.List;

public interface CommentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated
     */
    @Delete({
        "delete from comment",
        "where id_comment = #{idComment,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer idComment);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated
     */
    @Insert({
        "insert into comment (id_comment, content, ",
        "id_job, id_user, create_time, ",
        "is_delete)",
        "values (#{idComment,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, ",
        "#{idJob,jdbcType=INTEGER}, #{idUser,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{isDelete,jdbcType=TINYINT})"
    })
    int insert(Comment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated
     */
    int insertSelective(Comment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id_comment, content, id_job, id_user, create_time, is_delete",
        "from comment",
        "where id_comment = #{idComment,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    Comment selectByPrimaryKey(Integer idComment);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Comment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated
     */
    @Update({
        "update comment",
        "set content = #{content,jdbcType=VARCHAR},",
          "id_job = #{idJob,jdbcType=INTEGER},",
          "id_user = #{idUser,jdbcType=INTEGER},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "is_delete = #{isDelete,jdbcType=TINYINT}",
        "where id_comment = #{idComment,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Comment record);

    List<Comment> selectAllCommentsByContent(@Param("content")String conten);

    List<Comment> selectAllCommentByUserName(@Param("userName")String userName);
}